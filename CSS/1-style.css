* {
    /*universal selector*/
    font-family: 'Courier New';
}

h1 {
    /* element selector */
    color:cornflowerblue;
    background-color: black;
}

/* colour systems:
    Named: red
    RGB: rgb(255, 0, 0, 1) red = 255, green = 0, blue = 0, alhpha (opacity) = 1
    HEX: #ff0000ff red = ff, green = 00, blue = 00, alhpha (opacity) = ff
*/

h2 {
    text-align: center; /* left, right, center, justify */
    font-weight: bold; /* normal, bold, bolder, lighter */
    font-style: italic; /* normal, italic, oblique */
    text-decoration: underline; /* underline, overline, line-through */
    line-height: 20px; 
    letter-spacing: 3px; 
    font-size: 20px; 
}

/* font size units:
    px: pixels
    em: relative to the font size of the element
    rem: relative to the font size of the root element
    %: percentage of the parent element
    vw: 1% of the viewport width
    vh: 1% of the viewport height
*/

#myid {
    /* id selector */
    text-align: right;
}

.myclass {
    /* class selector */
    color: cornflowerblue;
}

div p {
    /* descendant selector */
    color: red;
}

/*combinators:
    Descendant: div p
    Child: div > p
    Adjacent Sibling: div + p
    General Sibling: div ~ p
*/

input[type="text"] {
    /* attribute selector */
    width: 300px;
}

/* pseudo-classes:
    :hover
    :active
    :nth-of-type(n)
    :checked
*/

button:hover {
    /* pseudo-class */
    background-color: cornflowerblue;
    color: white;
}

/* pseudo-elements:
    ::first-letter
    ::first-line
    ::selection
*/

h1::first-letter {
    /* pseudo-element */
    font-size: 60px;
}

/* The CSS cascade algorithm's job is to select CSS declarations in order to determine the correct values for CSS properties. */

h4 {
    color: red;
}

h4 {
    color: blue;
}

/* The last declaration will override the previous declarations. */

/* Specificity is an algorithm that calculates the weight that is applied to a given CSS declaration - 3 digit number

id > class > element
*/

/* !important is a keyword that can be added to a CSS declaration to override the normal specificity rules. */

#content {
    height: 300px;
    width: 300px;
    background-color: pink;
    /* border-width: 3px;
    border-color: black;
    border-style: solid; */
    border: 3px black solid;

    border-left-style: dashed;

    border-radius: 50px;
    /* border-top-right-radius: 50px; */

    /* border-radius: 50%; - to make it a circle */

    padding: 20px; /* padding inside the border */

    margin: 50px; /* margin outside the border */

    display: inline-block; /* block, inline, inline-block */
    /* display: none; - to hide the element */
    /* display: flex; - to make it a flex container */
    /* display: grid; - to make it a grid container */
    }

    #one, #two, #three, #four, #five, #six, #seven {
    height: 100px;
    width: 100px;
    background-color: cornflowerblue;
    margin: 60px;
}

/* transitions */
#one {
    /* transition: 0.75s; */
    /* transition: property duration timing-function delay; */
    transition: background-color 0.75s ease-in-out 0.2s;
}

#one:hover {
    background-color: black;
}

/* transforms */
#two {
    transform: rotate(45deg);
}

#three {
    transform: scale(0.75);
}

#four {
    transform: skew(-20deg);
}

#five {
    transform: translate(50px, 50px);
}

/* shorthand : transform: rotate(45deg) scale(0.75) skew(-20deg) translate(50px, 50px); */

#six {
    box-shadow: 2px 2px 5px 2px black;
}

#seven {
    height: 200px;
    width: 200px;
    background-image: url('image.png');

    background-size: cover; /* cover, contain, auto */
}